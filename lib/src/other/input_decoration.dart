import 'package:flutter/material.dart';

@Deprecated(
    'Use [CustomInputDecoration()] instead. This will be removed in the next major version.'
    'This feature was deprecated after v0.0.13+2')
InputDecoration inputDecoration(
  context, {
  required String hintText,
  required String labelText,
  int? hintMaxLines,
  String? prefixText,
  String? suffixText,
  IconData prefixIcon = Icons.edit_rounded,
  bool showPrefixIcon = true,
  Widget? icon,
  Widget? suffixIcon,
}) {
  return InputDecoration(
    hintText: hintText,
    labelText: labelText,
    prefixText: prefixText,
    suffixText: suffixText,
    counter: const SizedBox(
      height: 8,
    ),
    prefixIcon: showPrefixIcon ? Icon(prefixIcon) : null,
    icon: icon,
    suffixIcon: suffixIcon,
    border: OutlineInputBorder(
      borderSide: const BorderSide(),
      borderRadius: BorderRadius.circular(18),
    ),
    hintMaxLines: hintMaxLines,
  );
}

class CustomInputDecoration extends InputDecoration {
  CustomInputDecoration({
    String? hintText,
    String? labelText,
    int? hintMaxLines,
    String? prefixText,
    String? suffixText,
    IconData prefixIcon = Icons.edit_rounded,
    bool showPrefixIcon = true,
    Widget? prefixIconWidget,
    Widget? icon,
    Widget? suffixIcon,
    Color? iconColor,
    Widget? label,
    TextStyle? labelStyle,
    TextStyle? floatingLabelStyle,
    String? helperText,
    TextStyle? helperStyle,
    int? helperMaxLines,
    TextStyle? hintStyle,
    TextDirection? hintTextDirection,
    String? errorText,
    TextStyle? errorStyle,
    int? errorMaxLines,
    FloatingLabelBehavior? floatingLabelBehavior,
    FloatingLabelAlignment? floatingLabelAlignment,
    bool isCollapsed = false,
    bool isCounter = true,
    bool? isDense,
    EdgeInsetsGeometry? contentPadding,
    Widget? prefix,
    BoxConstraints? prefixIconConstraints,
    TextStyle? prefixStyle,
    Color? prefixIconColor,
    Widget? suffix,
    TextStyle? suffixStyle,
    Color? suffixIconColor,
    BoxConstraints? suffixIconConstraints,
    Widget? counter,
    String? counterText,
    TextStyle? counterStyle,
    bool? filled,
    Color? fillColor,
    Color? focusColor,
    Color? hoverColor,
    InputBorder? errorBorder,
    InputBorder? focusedBorder,
    InputBorder? focusedErrorBorder,
    InputBorder? disabledBorder,
    InputBorder? enabledBorder,
    InputBorder? border,
    bool enabled = true,
    String? semanticCounterText,
    bool? alignLabelWithHint,
    BoxConstraints? constraints,
  }) : super(
          hintText: hintText,
          labelText: labelText,
          prefixText: prefixText,
          suffixText: suffixText,
          counter: isCounter ? const SizedBox(height: 8) : counter,
          prefixIcon: showPrefixIcon ? Icon(prefixIcon) : prefixIconWidget,
          icon: icon,
          suffixIcon: suffixIcon,
          border: border ??
              OutlineInputBorder(
                borderSide: const BorderSide(),
                borderRadius: BorderRadius.circular(18),
              ),
          hintMaxLines: hintMaxLines,
          errorMaxLines: errorMaxLines,
          errorBorder: errorBorder,
          enabled: enabled,
          disabledBorder: disabledBorder,
          counterText: counterText,
          counterStyle: counterStyle,
          contentPadding: contentPadding,
          constraints: constraints,
          alignLabelWithHint: alignLabelWithHint,
          enabledBorder: enabledBorder,
          errorStyle: errorStyle,
          errorText: errorText,
          floatingLabelBehavior: floatingLabelBehavior,
          fillColor: fillColor,
          filled: filled,
          floatingLabelAlignment: floatingLabelAlignment,
          floatingLabelStyle: floatingLabelStyle,
          focusColor: focusColor,
          focusedBorder: focusedBorder,
          focusedErrorBorder: focusedErrorBorder,
          helperMaxLines: helperMaxLines,
          helperStyle: helperStyle,
          helperText: helperText,
          hintStyle: hintStyle,
          hintTextDirection: hintTextDirection,
          hoverColor: hoverColor,
          iconColor: iconColor,
          isCollapsed: isCollapsed,
          isDense: isDense,
          label: label,
          labelStyle: labelStyle,
          prefix: prefix,
          prefixIconColor: prefixIconColor,
          prefixIconConstraints: prefixIconConstraints,
          prefixStyle: prefixStyle,
          semanticCounterText: semanticCounterText,
          suffix: suffix,
          suffixIconColor: suffixIconColor,
          suffixIconConstraints: suffixIconConstraints,
          suffixStyle: suffixStyle,
        );
}
